Además de añadir y quitar elementos, también podemos acceder a un elemento específico de una lista utilizando su índice. Esto nos permite seleccionar y trabajar con un único elemento, en lugar de operar sobre toda la lista.

Acceso mediante Índices
Supongamos que tenemos una lista llamada lista_de_la_compra. Para acceder a un elemento específico, utilizamos corchetes ([]) y especificamos el índice del elemento que queremos ver. Por ejemplo:

python
Copiar código
# Crear la lista
lista_de_la_compra = ["manzanas", "peras", "plátanos", "sandía"]

# Acceder al primer elemento
print(lista_de_la_compra[0])  # Salida: manzanas
En este caso, lista_de_la_compra[0] nos devuelve "manzanas", ya que es el elemento que está en la posición 0 de la lista.

Acceso a Otros Elementos
Podemos acceder a cualquier elemento de la lista utilizando su índice. Por ejemplo:

python
Copiar código
# Acceder al tercer elemento
print(lista_de_la_compra[2])  # Salida: plátanos
Esto selecciona "plátanos", que está en la posición 2 de la lista.

Memoria y Acceso Selectivo
Las listas nos permiten almacenar múltiples elementos en memoria y acceder a ellos de forma selectiva. Es decir, aunque tengamos varios elementos almacenados, podemos decidir trabajar únicamente con uno de ellos:

"manzanas" si queremos el primer elemento.
"peras" si queremos el segundo.
"plátanos" si queremos el tercero.
Y así sucesivamente.
Esto es especialmente útil cuando manejamos listas largas y solo necesitamos interactuar con un subconjunto de datos.
